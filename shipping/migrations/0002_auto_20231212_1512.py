# Generated by Django 4.2.2 on 2023-12-12 09:12
from pickle import FALSE, TRUE
from django.contrib.auth.models import User
from django.contrib.auth.models import Group

from django.db import migrations
# Подключаем модуль для работы с датой/веременем
from datetime import datetime, timedelta
# Подключаем модкль генерации случайных чисел
import random

global dict_manufacturer
dict_manufacturer = {}

global dict_kind
dict_kind = {}

# Получение случайного адреса (k - включает ли адрес квартиру)
def get_adres(k):
    ulica = ["ул. Баженова", 
            "ул. Вавилова", 
            "ул. Гастелло", 
            "ул. Гончарная", 
            "ул. Грибоедова", 
            "ул. Дружбы", 
            "ул. Ермекова",
            "ул. Жамбыла", 
            "ул. Защитная", 
            "ул. Ипподромная", 
            "ул. Караванная", 
            "ул. Кирпичная", 
            "ул. Луначарского", 
            "ул. Маяковского", 
            "ул. Некрасова", 
            "ул. Новоселов",
            "ул. Олимпийская", 
            "ул. Победы", 
            "ул. Садовая", 
            "ул. Стремянная", 
            "ул. Университетская", 
            "ул. Фрунзе",
            "ул. Чайковского" 
        ]
    if (k==True):
        adres = random.choice(ulica) + ", " + str(random.randint(1, 200)) + "-" + str(random.randint(1, 200)) 
    else:
        adres = random.choice(ulica) + ", " + str(random.randint(1, 200)) 
    return adres

# Получение случайного телефона
def get_telefon():
    if random.randint(0, 1) == 1:
        telefon = "+7-911-"
    else:
        telefon = "+7-904-" 
    telefon = telefon + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + "-" + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) 
    return telefon

# Добавить заявки клиента 
def insert_application(apps, param_application):   
    Application = apps.get_model("shipping", "Application")
    application = Application()
    application.datea = param_application[0]
    application.user_id = param_application[1]
    application.title = param_application[2]
    application.details = param_application[3]
    application.save()
    application.datea = param_application[0]
    application.save()
    # Добавить движенеи заявки
    parameters = [application.id, application.datea, "Заявка принята", "Заявка принята в обработку"]
    insert_movement(apps, parameters)
    parameters = [application.id, application.datea + timedelta(days=3), "Груз в пути", "Груз находится в пути"]
    insert_movement(apps, parameters)
    return

# Добавить движение заявки клиента 
def insert_movement(apps, param_movement):   
    Movement = apps.get_model("shipping", "Movement")
    movement = Movement()
    movement.application_id = param_movement[0]
    movement.datem = param_movement[1]
    movement.status = param_movement[2]
    movement.details = param_movement[3]
    movement.save()
    movement.datem = param_movement[1]
    movement.save()
    return

# Добавить водителя 
def insert_driver(apps, param_driver):   
    Driver = apps.get_model("shipping", "Driver")
    driver = Driver()
    driver.full_name = param_driver[0]
    driver.birthday = param_driver[1]
    driver.phone = param_driver[2]
    driver.category = param_driver[3]
    driver.save()
    return

# Найти или Добавить Производителя автомобиля
def get_manufacturer(apps, val):   
    # Поиск категории
    if val in dict_manufacturer.values():
        for k, v in dict_manufacturer.items():
            if v == val:
                return k    
    else:
        Manufacturer = apps.get_model("shipping", "Manufacturer")
        manufacturer = Manufacturer()
        manufacturer.title = val
        manufacturer.save()
        dict_manufacturer[manufacturer.id] = manufacturer.title
        return manufacturer.id

# Найти или Добавить Тип кузова автомобиля
def get_kind(apps, val):   
    # Поиск категории
    if val in dict_kind.values():
        for k, v in dict_kind.items():
            if v == val:
                return k    
    else:
        Kind = apps.get_model("shipping", "Kind")
        kind = Kind()
        kind.title = val
        kind.save()
        dict_kind[kind.id] = kind.title
        return kind.id

# Добавить модель автомобиля 
def insert_replica(apps, param_replica):   
    Replica = apps.get_model("shipping", "Replica")
    replica = Replica()
    replica.manufacturer_id = param_replica[0]
    replica.kind_id = param_replica[1]
    replica.title = param_replica[2]
    replica.capacity = param_replica[3]
    replica.save()
    return

# Добавить конкретный автомобиль
def insert_automobile(apps, param_automobile):   
    Automobile = apps.get_model("shipping", "Automobile")
    automobile = Automobile()
    automobile.replica_id = param_automobile[0]
    automobile.yr = param_automobile[1]
    automobile.reg_number = param_automobile[2]
    automobile.driver_id = param_automobile[3]
    automobile.save()
    return

# Добавить путевой лист
def insert_waybill(apps, param_waybill):   
    Waybill = apps.get_model("shipping", "Waybill")
    waybill = Waybill()
    waybill.datew = param_waybill[0]
    waybill.numb = param_waybill[1]
    waybill.automobile_id = param_waybill[2]
    waybill.start = param_waybill[3]
    waybill.finish = param_waybill[4]
    waybill.whence = param_waybill[5]
    waybill.where = param_waybill[6]
    waybill.details = param_waybill[7]
    waybill.save()
    return

## Добавить водителей к путевому листу
#def insert_waybil_driver(apps, param_waybil_driver):   
#    WaybillDriver = apps.get_model("shipping", "WaybillDriver")
#    waybil_driver = WaybillDriver()
#    waybil_driver.waybill_id = param_waybil_driver[0]
#    waybil_driver.driver_id = param_waybil_driver[1]
#    waybil_driver.save()
#    return

# Добавить Новости
def insert_news(apps, param):
    News = apps.get_model("shipping", "News")
    news = News()
    news.daten = param[0]
    news.title = param[1]
    news.details = param[2]
    news.photo = param[3]
    news.save()
    return 

# Начальные данные
def new_data(apps, schema_editor):
    try:
        # Суперпользователь id=1
        user = User.objects.create_superuser(username='root',
        email='transport120823@mail.ru',
        first_name='Александр', 
        last_name='Макогонов',
        password='SsNn5678+-@')
        print("Суперпользователь создан")
    
        # Группа менеджеров
        managers = Group.objects.get_or_create(name = 'Managers')
        managers = Group.objects.get(name='Managers')
        print("Группа менеджеров создана")
    
        # Пользователь с ролью менеджера id=2
        user = User.objects.create_user(username='manager', password='Ss0066+-', email='manager@mail.ru', first_name='Илья', last_name='Дик')
        managers.user_set.add(user)
        print("Менеджер добавлен в группу менеджеров")

        # Простые пользователи () id3-12
        user = User.objects.create_user(username='user1', password='Uu0066+-', email='user1@mail.ru', first_name='Анна', last_name='Хуторная')
        user = User.objects.create_user(username='user2', password='Uu0066+-', email='user2@mail.ru', first_name='Николай', last_name='Евдокименко')
        user = User.objects.create_user(username='user3', password='Uu0066+-', email='user3@mail.ru', first_name='Евгения', last_name='Красикова')
        user = User.objects.create_user(username='user4', password='Uu0066+-', email='user4@mail.ru', first_name='Роман', last_name='Кобенко')
        user = User.objects.create_user(username='user5', password='Uu0066+-', email='user5@mail.ru', first_name='Ирина', last_name='Дитц')
        user = User.objects.create_user(username='user6', password='Uu0066+-', email='user6@mail.ru', first_name='Руслан', last_name='Бердов')
        user = User.objects.create_user(username='user7', password='Uu0066+-', email='user7@mail.ru', first_name='Никита', last_name='Олейничук')
        user = User.objects.create_user(username='user8', password='Uu0066+-', email='user8@mail.ru', first_name='Павел', last_name='Пономарёв')
        user = User.objects.create_user(username='user9', password='Uu0066+-', email='user9@mail.ru', first_name='Павел', last_name='Гаврилин')
        user = User.objects.create_user(username='user10', password='Uu0066+-', email='user10@mail.ru', first_name='Никита', last_name='Чарушин')        
        print("Созданы простые пользователи")
        
        # Заявки клиентов 
        parameters = [datetime.now() - timedelta(days=50) + timedelta(minutes=random.randint(1, 120)), 3, "Перевозка товарно-материальных ценностей", "Груз в упаковке весом от 10 до 20 кг, общий вес 1,2 т"]
        insert_application(apps, parameters)
        parameters = [datetime.now() - timedelta(days=45) + timedelta(minutes=random.randint(1, 120)), 4, "Перевозка товарно-материальных ценностей", "Груз в упаковке весом от 10 до 50 кг, общий вес 3,5 т"]
        insert_application(apps, parameters)
        parameters = [datetime.now() - timedelta(days=40) + timedelta(minutes=random.randint(1, 120)), 5, "Перевозка стройматериалов", "Карьерный щебень, весом 6 т"]
        insert_application(apps, parameters)
        parameters = [datetime.now() - timedelta(days=35) + timedelta(minutes=random.randint(1, 120)), 6, "Перевозка стройматериалов", "Требуется бетномешалка"]
        insert_application(apps, parameters)
        parameters = [datetime.now() - timedelta(days=30) + timedelta(minutes=random.randint(1, 120)), 7, "Перевозка стройматериалов", "Сухие строительные смеси в мешках по 25 кг, общий вес примерно 20 т"]
        insert_application(apps, parameters)
        parameters = [datetime.now() - timedelta(days=25) + timedelta(minutes=random.randint(1, 120)), 8, "Перевозка стройматериалов", "Карьерный щебень, весом 20 т"]
        insert_application(apps, parameters)
        parameters = [datetime.now() - timedelta(days=20) + timedelta(minutes=random.randint(1, 120)), 9, "Перевозка товарно-материальных ценностей", "Общий вес примерно 25 т"]
        insert_application(apps, parameters)
        parameters = [datetime.now() - timedelta(days=15) + timedelta(minutes=random.randint(1, 120)), 10, "Перевозка товарно-материальных ценностей", "Общий вес примерно 30 т"]
        insert_application(apps, parameters)
        parameters = [datetime.now() - timedelta(days=10) + timedelta(minutes=random.randint(1, 120)), 11, "Перевозка товарно-материальных ценностей", "Общий вес примерно 30 т"]
        insert_application(apps, parameters)
        parameters = [datetime.now() - timedelta(days=5) + timedelta(minutes=random.randint(1, 120)), 12, "Перевозка стройматериалов", "Гипсокартон, профили, смеси, вес примерно 8 т"]
        insert_application(apps, parameters)
        print("Созданы заявки клиентов")

        # Водители
        parameters = ["Ребик Евгений Васильевич", "1999-01-01 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)
        parameters = ["Люфт Иван Витальевич", "1998-02-02 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)
        parameters = ["Синицын Артём Дмитриевич", "1997-03-03 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)
        parameters = ["Аншаков Артем Владимирович", "1996-04-04 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)
        parameters = ["Котенёв Илья Вячеславович", "1995-05-05 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)
        parameters = ["Кучин Захар Евгеньевич", "1989-06-06 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)
        parameters = ["Карабейников Вадим Викторович", "1988-07-07 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)
        parameters = ["Макушенко Вячеслав Павлович", "1987-08-08 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)
        parameters = ["Аксенов Анатолий Григорьевич", "1986-09-09 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)
        parameters = ["Лампартер Владимир Федорович", "1985-10-10 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Бобров Владимир Васильевич", "1979-11-11 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Великий Александр Викторович", "1978-12-12 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Алексеев Иван Николаевич", "1977-01-13 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Карымов Владислав Валерьевич", "1976-02-14 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Силищев Данила Александрович", "1975-03-15 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Михуля Игорь Николаевич", "1969-04-16 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Браташов Владимир Васильевич", "1968-05-17 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Пак Владислав Григорьевич", "1967-06-18 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Иванов Михаил Германович", "1966-07-19 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        parameters = ["Ким Евгений Николаевич", "1965-08-20 00:00:00", get_telefon(), "B, C, CE"]
        insert_driver(apps, parameters)        
        print("Созданы Водители")

        parameters = [get_manufacturer(apps, "ГАЗ"), get_kind(apps, "Бортовой"), "ГАЗ Next А21R22", "Грузоподъёмность 1500 кг"]
        insert_replica(apps, parameters)
        parameters = [get_manufacturer(apps, "ГАЗ"), get_kind(apps, "Тент"), "ГАЗ Next C41R13", "Грузоподъёмность 4770 кг"]
        insert_replica(apps, parameters)
        parameters = [get_manufacturer(apps, "КамАЗ"), get_kind(apps, "Самосвал"), "КамАЗ 43255-69", "Объём кузова 6 м3, Грузоподъёмность 7750 кг"]
        insert_replica(apps, parameters)
        parameters = [get_manufacturer(apps, "SHACMAN"), get_kind(apps, "Автобетоносмеситель"), "SHACMAN SX5256GJBDR384", " Номинальный объем 9 м3, Водная вместимость, 10.5 м3"]
        insert_replica(apps, parameters)
        parameters = [get_manufacturer(apps, "SHACMAN"), get_kind(apps, "Бортовой"), "SHACMAN SX1256NV504C", "Грузоподъемность 25000 кг"]
        insert_replica(apps, parameters)
        parameters = [get_manufacturer(apps, "SHACMAN"), get_kind(apps, "Самосвал"), "SHACMAN SX3256DR384 F2000", "Объём кузова 19 м3, Грузоподъёмность 25000 кг"]
        insert_replica(apps, parameters)
        parameters = [get_manufacturer(apps, "SHACMAN"), get_kind(apps, "Тягач"), "SHACMAN SX4186DR361 F3000 D", "Допустимая полная масса полуприцепа 35250 кг"]
        insert_replica(apps, parameters)
        parameters = [get_manufacturer(apps, "FAW"), get_kind(apps, "Тягач"), "FAW CA 4180 P66K24E4", "Допустимая полная масса полуприцепа 34000 кг"]
        insert_replica(apps, parameters)
        parameters = [get_manufacturer(apps, "FAW"), get_kind(apps, "Тягач"), "FAW CA 4250 P66K24T1A1E4", "Допустимая полная масса полуприцепа 45000 кг"]
        insert_replica(apps, parameters)
        parameters = [get_manufacturer(apps, "JAC"), get_kind(apps, "Бортовой"), "JAC C1721 Gallop", "Грузоподъёмность 10020 кг"]
        insert_replica(apps, parameters)
        print("Созданы модели автомобилей")

        parameters = [1, 2020, "A123BE78RU", 1]
        insert_automobile(apps, parameters)
        parameters = [2, 2020, "B456EK78RU", 3]
        insert_automobile(apps, parameters)
        parameters = [3, 2020, "E789KM78RU", 5]
        insert_automobile(apps, parameters)
        parameters = [4, 2020, "K012MH78RU", 7]
        insert_automobile(apps, parameters)
        parameters = [5, 2020, "M345HO78RU", 9]
        insert_automobile(apps, parameters)
        parameters = [6, 2020, "H678OP78RU", 11]
        insert_automobile(apps, parameters)
        parameters = [7, 2020, "O901PC78RU", 13]
        insert_automobile(apps, parameters)
        parameters = [8, 2020, "P012CT78RU", 15]
        insert_automobile(apps, parameters)
        parameters = [9, 2020, "C345TY78RU", 17]
        insert_automobile(apps, parameters)
        parameters = [10, 2020, "T678YX78RU", 19]
        insert_automobile(apps, parameters)
        print("Созданы Автомобили")

        parameters = [datetime.now() - timedelta(days=50) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 1, 1, datetime.now() - timedelta(days=50) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=49) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Груз в упаковке весом от 10 до 20 кг, общий вес 1,2 т"]
        insert_waybill(apps, parameters)
        # Водители
        #parameters = [1, 1]
        #insert_waybil_driver(apps, parameters)
        #parameters = [1, 2]
        #insert_waybil_driver(apps, parameters)

        parameters = [datetime.now() - timedelta(days=45) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 2, 2, datetime.now() - timedelta(days=45) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=44) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Груз в упаковке весом от 10 до 50 кг, общий вес 3,5 т"]
        insert_waybill(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=40) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 3, 3, datetime.now() - timedelta(days=40) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=39) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Карьерный щебень, весом 6 т"]
        insert_waybill(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=35) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 4, 4, datetime.now() - timedelta(days=35) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=34) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Перевозка бетона"]
        insert_waybill(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=30) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 5, 5, datetime.now() - timedelta(days=30) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=29) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Сухие строительные смеси в мешках по 25 кг, общий вес 20 т"]
        insert_waybill(apps, parameters)

        parameters = [datetime.now() - timedelta(days=25) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 6, 6, datetime.now() - timedelta(days=25) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=24) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Карьерный щебень, весом 20 т"]
        insert_waybill(apps, parameters)

        parameters = [datetime.now() - timedelta(days=20) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 7, 7, datetime.now() - timedelta(days=20) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=19) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Товарно-материальные ценности, весом 25 т"]
        insert_waybill(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=15) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 8, 8, datetime.now() - timedelta(days=15) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=14) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Товарно-материальные ценности, весом 30 т"]
        insert_waybill(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=10) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 9, 9, datetime.now() - timedelta(days=10) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=9) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Товарно-материальные ценности, весом 30 т"]
        insert_waybill(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=5) - timedelta(hours=datetime.now().hour, minutes=datetime.now().minute, seconds=datetime.now().second, microseconds=datetime.now().microsecond), 10, 10, datetime.now() - timedelta(days=5) + timedelta(minutes=random.randint(1, 120)), datetime.now() - timedelta(days=4) + timedelta(minutes=random.randint(1, 120)), "Откуда", "Куда", "Гипсокартон, профили, смеси, вес 8 т"]
        insert_waybill(apps, parameters)
        
        print("Созданы Путевые листы")

        # Добавить Новости
        parameters = [datetime.now() - timedelta(days=35) + timedelta(minutes=random.randint(1, 120)), "Возле железнодорожного моста «Нижнеленинское-Тунцзян» построят крупный контейнерный терминал", """В районе первого железнодорожного моста между Россией и Китаем «Нижнеленинское-Тунцзян» в ближайшее время построят крупный контейнерный терминал, зерновой терминал и перевалочный комплекс для нефтепродуктов. Об этом, как отмечает ТАСС, рассказал глава Еврейской автономной области (ЕАО) Ростислав Гольдштейн во время прямой линии, которая транслировалась на нескольких телевизионных каналах и в социальных сетях. На данный момент по мосту уже осуществляются грузовые перевозки в двух направлениях, в том числе и движение контейнерных составов.
«В предмостовой территории компания «Гарант» вместе с компанией FESCO делают большой грузовой терминал на 380 тыс. TEU, … под ним — зерновой терминал на 3 млн. тонн. И также «Объединенная нефтегазохимическая компания» строит: подписаны уже документы, выделена земля под строительство большого перевалочного комплекса по нефтепродуктам и ИСУГам (интеллектуальным системам учета газа – прим.). Объем — 10 млн. тонн: это примерно «Московский химический завод» столько выпускает в год — огромнейший поток», — отметил Ростислав Гольдштейн.
Напомним: мост «Нижнеленинское-Тунцзян», который стал первым железнодорожным мостом между Россией и Китаем, открыли в ноябре прошлого года. Первое время поезда по нему шли только по направлению из России в Китай, причем перевозили они исключительно сырьевые грузы — каменный уголь и руду.
Лишь в конце июля этого года по мосту проследовал первый контейнерный состав из Китая, а в конце октября и Россия отправила по транспортному переходу первые контейнеры в КНР.
На данный момент мост может пропускать порядка 5,2 млн. тонн грузов в год, однако в целом его максимальные мощности рассчитаны на объем до 20 млн. тонн грузов в год. Однако для этого необходимо провести реконструкцию прилегающей железнодорожной сети, а также создать развитую сеть логистических центров и терминалов возле транспортного перехода.
Тем более что в районе моста функционирует речной пункт пропуска, что открывает возможности для организации мультимодальных перевозок, а значит, требует площадок для хранения грузов и их перевалки с одного вида транспорта на другой.""", "images/news1.jpg" ]
        insert_news(apps, parameters)

        parameters = [datetime.now() - timedelta(days=30) + timedelta(minutes=random.randint(1, 120)), "С 9 декабря вводятся новые требования на въезд иностранных автомобилей в Казахстан", """С 9-го декабря 2023-го года вступают в силу новые Правила въезда в Казахстан автотранспортных средств, зарегистрированных в других государствах. Среди прочего они требуют предоставление таких сведений, которые могут быть не у всех автовладельцев.
Естественно, общими требованиями для продолжения движения по территории Казахстана является наличие свидетельства о регистрации транспортного средства и полиса страхования автогражданской ответственности.
Однако новые правила также диктуют необходимость предъявления при въезде в республику сведений из системы электронных паспортов транспортных средств, зарегистрированных в ЕАЭС.
При этом переход на электронные паспорта транспортных средств (ПТС) в странах Союза происходил неравномерно, а замена бумажных паспортов, выданных до введения системы, на электронные в принципе не является обязательной. На данный момент электронные ПТС оформляются только на новые автомобили.
Как следствие, далеко не все автовладельцы смогут предъявить выписку из системы электронных паспортов.
В связи с этим Ассоциация международных автомобильных перевозчиков России (АСМАП) уже обратилась в Министерство транспорта РФ с тем, чтобы ведомство разъяснило спорные вопросы с компетентными органами Казахстана и добилось пропуска транспортных средств на территорию республики с бумажными ПТС.
Кстати, еще одним требованием для продолжения движения по территории Казахстана является наличие документа, подтверждающего прохождение технического осмотра.
Вместе с тем в России легковые автомобили, которые используются для личных нужд, на данный момент от технического осмотра освобождены.""", "images/news2.jpg" ]
        insert_news(apps, parameters)

        parameters = [datetime.now() - timedelta(days=25) + timedelta(minutes=random.randint(1, 120)), "В Азербайджане запустили единый центр мониторинга автоматических пунктов весогабаритного контроля грузовиков", """В Азербайджане создали единый центр мониторинга электронных весов, сообщили в Министерстве цифрового развития и транспорта республики. Речь идет о работе автоматических пунктов весогабаритного контроля грузовиков, которые постепенно планируют установить на всех автомагистралях страны.
«Министерство цифрового развития и транспорта и Государственное агентство автомобильных дорог Азербайджана, применяя новые технологии, уделяют особое внимание защите дорожного полотна, дорожных сооружений и других элементов инфраструктуры, продлению срока службы дорожного покрытия, обеспечению безопасности и другим требованиям. В этом отношении создан единый центр мониторинга электронных весов», — говорится в сообщении ведомства.
В нем уточняется, что центр будет осуществлять сбор и обработку данных, полученных с электронных весов, которые в автоматическом режиме взвешивают и делают замеры грузовых автомобилей, передвигающихся по дорогам страны.
Все нарушения, зафиксированные весами, будут отправляться в центр, где они будут обрабатываться и перенаправляться в электронную базу данных Министерства внутренних дел для принятия решения о привлечении владельца транспортного средства к административной ответственности.
«Целью создания центра является предотвращение нарушений требований по допустимым габаритам, массе и нагрузке крупногабаритных и тяжеловесных транспортных средств к параметрам массы, приходящейся на ось, в целях защиты автомобильных дорог общего пользования, а также обеспечение допуска к проезду по автомобильным дорогам крупногабаритных и тяжеловесных транспортных средств, нагруженных неделимым грузом», — пояснили в Министерстве цифрового развития и транспорта Азербайджана.
Там также подчеркнули, что центр будет обрабатывать информацию со всех постов, установленных в республике, причем в последующем электроннами весами планируют охватить всю дорожную сеть страны.""", "images/news3.jpg" ]
        insert_news(apps, parameters)

        parameters = [datetime.now() - timedelta(days=20) + timedelta(minutes=random.randint(1, 120)), "«КамАЗ» намерен в три раза увеличить выпуск грузовиков нового поколения К5", """«КамАЗ» планирует в следующем году в 3 раза нарастить выпуск грузовиков последнего поколения К5. Об этом, как отмечает ТАСС, журналистам заявил генеральный директор предприятия Сергей Когогин в кулуарах инвестиционного форума ВТБ «Россия зовет!». Ранее сообщалось, что по сравнению с прошлым годом завод увеличил производство грузовиков К5 в 2,5 раза.
Так, по словам Сергея Когогина, всего в 2023-м году объемы выпуска тягачей К5 могут составить 5 тыс. штук, а в следующем году ожидается увеличение до 15 тыс. транспортных средств.
«На следующий год из таких знаковых вещей — увеличение в три раза выпуска К5. … В этом году мы ждем 5 тыс.», — уточнил он.
Напомним: после 24-го февраля 2022-го года производство грузовых автомобилей, в том числе тягачей последнего поколения К5, на «КамАЗе» значительно сократилось на фоне дефицита комплектующих в связи с введенными санкциями в отношении России.
Только в сентябре 2022-го года предприятие возобновило производство грузовых автомобилей К5 с локализованными компонентами. А в феврале этого года на заводе сообщили, что собрали первый санкционно устойчивый магистральный грузовик «КамАЗ-54901».
Недавно стало известно, что всего за 9 месяцев текущего года «КамАЗ» выпустил более 3 тыс. грузовиков К5, улучшив тем самым в 2,5 раза показатели за аналогичный период прошлого года. Причем на предприятии подчеркнули, что в течение сентябре было выпущено даже больше машин, чем в досанкционный период.""", "images/news4.jpg" ]
        insert_news(apps, parameters)

        parameters = [datetime.now() - timedelta(days=15) + timedelta(minutes=random.randint(1, 120)), "Участок «Дюртюли-Ачит» в составе новой трассы М-12 на территории Башкортостана готов практически на треть", """Новый участок «Дюртюли-Ачит», который войдет в состав новой трассы М-12 «Восток» от Москвы до Тюмени, на территории Башкортостана построен уже практически на треть, рассказали в пресс-службе ГК «Автодор». Полностью его откроют для движения до конца следующего года.
«На первом этапе автомобильной дороги «Дюртюли-Ачит» в Республике Башкортостан завершена основная часть земляных работ: строители произвели выемку в объеме более 14,2 млн. куб. метров грунта из запланированных 19,1 млн. куб. метров, выполнили устройство насыпи свыше 11,1 млн. куб. метров грунта. Завершаются работы по строительству водопропускных труб, переустройству коммуникаций. Строительная готовность 140-километрового участка составляет более 30%», — пояснили в пресс-службе.
Там подчеркнули, что одновременно идут работы на всех 55 искусственных сооружениях — мостах и путепроводах, в том числе на уникальном транспортном десятипролетном переходе через реку Белая длиной 813 метров. «Сейчас мостовики занимаются устройством ростверков и тел опор, производится сборка вспомогательных сооружений для строительства моста и устройства для монтажа пролетного строения», — уточнили в компании.
Напомним: новый участок «Дюртюли-Ачит» протяженностью 275 км станет частью дороги «Казань-Екатеринбург» и в целом войдет в состав магистрали М-12 «Восток» от Москвы до Тюмени, основой которой является новая трасса «Москва-Казань».
При этом строительство нового участка разделено на три этапа — в зависимости от территории региона, по которому он проходит: 140 км — в Башкортостане, 92 км — в Пермском крае, 43 км — в Свердловской области.
И в то время как новую трассу «Москва-Казань» должны полностью открыть для движения в декабре текущего года, то сама магистраль М-12 «Восток» будет готова к концу следующего года, хотя после Казани в нее в основном входят участки действующих дорог (М-7 «Волга», Р-242 «Пермь-Екатеринбург» и Р-351 «Екатеринбург-Тюмень»), которые необходимо реконструировать и расширить как минимум до четырех полос.
Срок до конца 2024-го года установлен главным образом на строительство новых участков — «Дюртюли-Ачит», обход Набережных Челнов в Татарстане (81,4 км) и обход нескольких населенных пунктов в Башкортостане (65 км).
В дальнейшем же, к 2030-му году, магистраль М-12 «Восток» планируют довести до Владивостока и ответвлениями на походы к крупным городам и подъезды к границе с Монголией, Казахстаном, Китаем и Северной Кореей.""", "images/news5.jpg" ]
        insert_news(apps, parameters)

        parameters = [datetime.now() - timedelta(days=10) + timedelta(minutes=random.randint(1, 120)), "С 1 сентября дорожные камеры в России начнут устанавливать по строгим правилам", """Министерство транспорта РФ разработало проект правил размещения дорожных камер, фиксирующих нарушения ПДД. Они должны вступить в силу с 1-го сентября 2024-го года вместе с соответствующим ранее принятым законом. В результате, установка комплексов будет четко регулируемой и водителям будет легче обжаловать штрафы с камер, которые новым правилам не подчиняются.
Напомним: президент РФ Владимир Путин еще в 2019-м году поручил разработать четкие правила размещения комплексов фотовидеофиксации нарушений ПДД. К концу того же года Правительство утвердило соответствующую методику, однако она на самом деле носит рекомендательный характер.
Только весной этого года был принят федеральный закон, который вводит единые требования к установке дорожных камер. Он вступит в силу с 1-го сентября 2024-го года. Правда, для того чтобы он мог действовать, к нему должны прилагаться соответствующие правила.
Проект именно таких правил сейчас представило Министерство транспорта РФ. Впрочем, они во многом повторяют положения самого закона.
Так, для размещения комплексов фотовидеофиксации определен строгий перечень из девяти мест:
1. на дорогах с выделенной полосой для движения маршрутных транспортных средств;
2. на аварийно опасных участках дорог (где в течение года произошло как минимум три ДТП одного вида или как минимум пять ДТП вне зависимости от вида, в результате которых есть погибшие или раненые);
3. на пересечении дорог, где в течение года произошло четыре и более ДТП с материальным ущербом одного вида, или два ДТП одного вида, или четыре ДТП независимо от вида, если есть погибшие или раненые;
4. на автоматических постах весогабаритного контроля;
5. в местах проведения дорожных или других работ, которые требуют ограничения движения;
6. на пешеходных переходах;
7. в местах, где запрещена стоянка или остановка транспортных средств;
8. на перекрестках;
9. в местах, определяемых при осуществлении контроля ‎в области безопасности дорожного движения.
Кроме того, установка дорожных камер предусматривается еще на железнодорожных переездах, однако для таких случаев выработают отдельные правила.
Все дорожные камеры, естественно, должны будут в обязательном порядке выделяться соответствующим знаком «Фотовидеофиксация» с тем лишь исключением, что в населенных пунктах допускается установка одного общего знака на въезде.
При этом первый комплекс в населенном пункте должен стоять не ближе 100 метров после знака, а вне населенного пункта — на расстоянии 150-300 метров от знака.
Владельцы дорог должны будут вести реестры камер и обязательно предупреждать ГИБДД об установке каждого нового комплекса. В свою очередь, ГИБДД должна размещать информацию (географические координаты, вид фиксируемого нарушения и т.п.) обо всех камерах в соответствующем разделе у себя на сайте (по ссылке).
Главное же правило заключается в том, что с тех камер, которые установлены вразрез с принятыми требованиями, штрафы не взимаются.""", "images/news6.jpg" ]
        insert_news(apps, parameters)

        parameters = [datetime.now() - timedelta(days=5) + timedelta(minutes=random.randint(1, 120)), "Новый транспортный маршрут между Россией и Китаем может пройти по реке Иртыш через Казахстан", """Власти Казахстана намерены развивать транзитный потенциал трансграничной реки Иртыш и таким образом соединить Россию и Китай новым транспортным маршрутом. Об этом, как отмечает ТАСС, заявил на заседании Правительства министр транспорта республики Марат Карабаев. С этой целью планируется строительство нового порта и судоходного шлюза.
«Развитие транзитных возможностей трансграничной реки Иртыш. Это позволит соединить новым транспортным сообщением Россию и Китай. Для развития данного маршрута будет предусмотрено строительство нового судоходного шлюза в районе города Семей», — рассказал Марат Карабаев.
Кроме того, он отметил, что для реализации проект будет построен порт в районе поселка Тугыл и проложена железная дорога до границы с Китаем на участке «Тугыл-Майкапчагай» протяженностью 99 км. «Ожидаемый объем перевозок — 2-2,5 млн. тонн», — уточнил министр транспорта Казахстана.
Одновременно Марат Карабаев отметил, что одним из направлений развития речного судоходства является восстановление экспортных перевозок через Урало-Каспийский канал.
«В следующем году будут начаты дноуглубительные работы на судоходном канале. Также будет проведена модернизация Атырауского речного порта. Данный маршрут планируется включить в состав Транскаспийского международного транспортного маршрута. Потенциальный объем перевозок составит порядка 1 млн. тонн», — пояснил министр.""", "images/news7.jpg" ]
        insert_news(apps, parameters)

    except Exception as error:
        print(error)

class Migration(migrations.Migration):

    dependencies = [
        ('shipping', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(new_data),
        #migrations.RunSQL("""CREATE VIEW view_coming AS
        #SELECT id, datec, numb, organization, (SELECT SUM((price*quantity)) FROM catalog WHERE catalog.coming_id=coming.id) AS total FROM coming"""),
        #migrations.RunSQL("""CREATE VIEW view_catalog AS
        #SELECT catalog.id, catalog.coming_id, catalog.category_id, category.title AS category, catalog.title,catalog.details, catalog.price, catalog.quantity, (catalog.price*catalog.quantity) AS total, catalog.unit, 
        #(SELECT SUM(quantity) FROM sale WHERE sale.catalog_id = catalog.id) AS sale_quantity,
        #CASE 
        #WHEN (catalog.quantity - (SELECT SUM(quantity) FROM sale WHERE sale.catalog_id = catalog.id)) IS NULL 
        #THEN catalog.quantity 
        #ELSE (catalog.quantity - (SELECT SUM(quantity) FROM sale WHERE sale.catalog_id = catalog.id)) 
        #END
        #AS available
        #FROM catalog LEFT JOIN category ON catalog.category_id = category.id
        #WHERE catalog.quantity > 0
        #ORDER BY catalog.title,  catalog.title"""),        
       

    ]

